"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[618],{"./stories/Checkbox/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Colors:()=>Colors,Default:()=>Default,Disabled:()=>Disabled,WithLabel:()=>WithLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("../../node_modules/react/index.js"),es=__webpack_require__("../../packages/ui/dist/es/index.js"),emotion_react_browser_esm=__webpack_require__("../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js");const Checkbox=props=>(0,emotion_react_browser_esm.tZ)(es.XZ,props);Checkbox.displayName="Checkbox",Checkbox.defaultProps=es.rS.checkbox.defaultProps;const stories_Checkbox=Checkbox;try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"enum",value:[{value:'"gray"'},{value:'"yellow"'},{value:'"green"'},{value:'"blue"'},{value:'"red"'},{value:'"purple"'}]}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | number | readonly string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/Checkbox/index.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"stories/Checkbox/index.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const index_stories={title:"ui/Checkbox",component:stories_Checkbox,tags:["autodocs"],args:{...es.rS.checkbox.defaultProps}},Default={name:"Default"},WithLabel={name:"With label",args:{label:"Label"}},Colors={name:"Colors",render:args=>(0,emotion_react_browser_esm.tZ)(react.Fragment,null,(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"gray",label:"Gray"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"yellow",label:"Yellow"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"green",label:"Green"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"blue",label:"Blue"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"red",label:"Red"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"purple",label:"Purple"}))),argTypes:{label:{table:{disable:!0}},color:{table:{disable:!0}}}},Disabled={name:"Disabled",render:args=>(0,emotion_react_browser_esm.tZ)(react.Fragment,null,(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"gray",label:"Gray",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"yellow",label:"Yellow",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"green",label:"Green",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"blue",label:"Blue",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"red",label:"Red",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"purple",label:"Purple",disabled:!0}))),argTypes:{label:{table:{disable:!0}},color:{table:{disable:!0}},disabled:{table:{disable:!0}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  name: 'Default'\n}",...Default.parameters?.docs?.source}}},WithLabel.parameters={...WithLabel.parameters,docs:{...WithLabel.parameters?.docs,source:{originalSource:"{\n  name: 'With label',\n  args: {\n    label: 'Label'\n  }\n}",...WithLabel.parameters?.docs?.source}}},Colors.parameters={...Colors.parameters,docs:{...Colors.parameters?.docs,source:{originalSource:'{\n  name: \'Colors\',\n  render: args => <Fragment>\n      <Checkbox {...args} color="gray" label="Gray" />\n      <Checkbox {...args} color="yellow" label="Yellow" />\n      <Checkbox {...args} color="green" label="Green" />\n      <Checkbox {...args} color="blue" label="Blue" />\n      <Checkbox {...args} color="red" label="Red" />\n      <Checkbox {...args} color="purple" label="Purple" />\n    </Fragment>,\n  argTypes: {\n    label: {\n      table: {\n        disable: true\n      }\n    },\n    color: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}',...Colors.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  name: \'Disabled\',\n  render: args => <Fragment>\n      <Checkbox {...args} color="gray" label="Gray" disabled />\n      <Checkbox {...args} color="yellow" label="Yellow" disabled />\n      <Checkbox {...args} color="green" label="Green" disabled />\n      <Checkbox {...args} color="blue" label="Blue" disabled />\n      <Checkbox {...args} color="red" label="Red" disabled />\n      <Checkbox {...args} color="purple" label="Purple" disabled />\n    </Fragment>,\n  argTypes: {\n    label: {\n      table: {\n        disable: true\n      }\n    },\n    color: {\n      table: {\n        disable: true\n      }\n    },\n    disabled: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}',...Disabled.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithLabel","Colors","Disabled"]}}]);