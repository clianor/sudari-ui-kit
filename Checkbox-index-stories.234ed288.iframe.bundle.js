"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[618],{"./stories/Checkbox/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checked:()=>Checked,Colors:()=>Colors,CustomIcon:()=>CustomIcon,Default:()=>Default,Disabled:()=>Disabled,Indeterminate:()=>Indeterminate,Sizes:()=>Sizes,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var emotion_react_browser_esm=__webpack_require__("../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js");function r(){return r=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r.apply(this,arguments)}var o=function(t){return(0,emotion_react_browser_esm.tZ)("svg",r({"clip-rule":"evenodd","fill-rule":"evenodd","stroke-linejoin":"round","stroke-miterlimit":"2",viewBox:"0 0 24 24",width:"100%",height:"100%",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor"},t),(0,emotion_react_browser_esm.tZ)("path",{d:"M12 5.173l2.335 4.817 5.305.732-3.861 3.71.942 5.27-4.721-2.524-4.721 2.525.942-5.27-3.861-3.71 5.305-.733 2.335-4.817zm0-4.586l-3.668 7.568-8.332 1.151 6.064 5.828-1.48 8.279 7.416-3.967 7.416 3.966-1.48-8.279 6.064-5.827-8.332-1.15-3.668-7.569z"}))},n=function(t){return(0,emotion_react_browser_esm.tZ)("svg",r({"clip-rule":"evenodd","fill-rule":"evenodd","stroke-linejoin":"round","stroke-miterlimit":"2",viewBox:"0 0 24 24",width:"100%",height:"100%",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor"},t),(0,emotion_react_browser_esm.tZ)("path",{d:"m11.322 2.923c.126-.259.39-.423.678-.423.289 0 .552.164.678.423.974 1.998 2.65 5.44 2.65 5.44s3.811.524 6.022.829c.403.055.65.396.65.747 0 .19-.072.383-.231.536-1.61 1.538-4.382 4.191-4.382 4.191s.677 3.767 1.069 5.952c.083.462-.275.882-.742.882-.122 0-.244-.029-.355-.089-1.968-1.048-5.359-2.851-5.359-2.851s-3.391 1.803-5.359 2.851c-.111.06-.234.089-.356.089-.465 0-.825-.421-.741-.882.393-2.185 1.07-5.952 1.07-5.952s-2.773-2.653-4.382-4.191c-.16-.153-.232-.346-.232-.535 0-.352.249-.694.651-.748 2.211-.305 6.021-.829 6.021-.829s1.677-3.442 2.65-5.44z","fill-rule":"nonzero"}))},react=__webpack_require__("../../node_modules/react/index.js"),es=__webpack_require__("../../packages/ui/dist/es/index.js");const Checkbox=props=>(0,emotion_react_browser_esm.tZ)(es.XZ,props);Checkbox.displayName="Checkbox",Checkbox.defaultProps=es.rS.checkbox.defaultProps;const stories_Checkbox=Checkbox;try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{indeterminate:{defaultValue:null,description:"",name:"indeterminate",required:!1,type:{name:"boolean"}},indeterminateIcon:{defaultValue:null,description:"",name:"indeterminateIcon",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"ReactNode"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'},{value:'"lg"'}]}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"enum",value:[{value:'"gray"'},{value:'"yellow"'},{value:'"green"'},{value:'"blue"'},{value:'"red"'},{value:'"purple"'}]}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | number | readonly string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/Checkbox/index.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"stories/Checkbox/index.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const index_stories={title:"ui/Checkbox",component:stories_Checkbox,tags:["autodocs"],args:{...es.rS.checkbox.defaultProps}},Default={name:"Default"},Sizes={name:"Sizes",render:args=>(0,emotion_react_browser_esm.tZ)(react.Fragment,null,(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{size:"sm"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{size:"md"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{size:"lg"})))},Colors={name:"Colors",render:args=>(0,emotion_react_browser_esm.tZ)(react.Fragment,null,(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"gray"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"yellow"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"green"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"blue"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"red"})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"purple"}))),argTypes:{color:{table:{disable:!0}}}},Checked={name:"Checked",render:args=>(0,emotion_react_browser_esm.tZ)(react.Fragment,null,(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"gray",checked:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"yellow",checked:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"green",checked:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"blue",checked:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"red",checked:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"purple",checked:!0}))),argTypes:{color:{table:{disable:!0}},checked:{table:{disable:!0}}}},Indeterminate={name:"Indeterminate",render:args=>(0,emotion_react_browser_esm.tZ)(react.Fragment,null,(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"gray",indeterminate:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"yellow",indeterminate:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"green",indeterminate:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"blue",indeterminate:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"red",indeterminate:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"purple",indeterminate:!0}))),argTypes:{color:{table:{disable:!0}},checked:{table:{disable:!0}},indeterminate:{table:{disable:!0}}}},Disabled={name:"Disabled",render:args=>(0,emotion_react_browser_esm.tZ)(react.Fragment,null,(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"gray",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"yellow",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"green",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"blue",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"red",disabled:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{color:"purple",disabled:!0}))),argTypes:{color:{table:{disable:!0}},disabled:{table:{disable:!0}}}},CustomIcon={name:"Custom icon",render:args=>(0,emotion_react_browser_esm.tZ)(react.Fragment,null,(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{icon:(0,emotion_react_browser_esm.tZ)(o,null),checked:!0})),(0,emotion_react_browser_esm.tZ)(stories_Checkbox,_extends({},args,{icon:(0,emotion_react_browser_esm.tZ)(n,null),checked:!0}))),argTypes:{checked:{table:{disable:!0}},icon:{table:{disable:!0}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  name: 'Default'\n}",...Default.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  name: \'Sizes\',\n  render: args => <Fragment>\n      <Checkbox {...args} size="sm" />\n      <Checkbox {...args} size="md" />\n      <Checkbox {...args} size="lg" />\n    </Fragment>\n}',...Sizes.parameters?.docs?.source}}},Colors.parameters={...Colors.parameters,docs:{...Colors.parameters?.docs,source:{originalSource:'{\n  name: \'Colors\',\n  render: args => <Fragment>\n      <Checkbox {...args} color="gray" />\n      <Checkbox {...args} color="yellow" />\n      <Checkbox {...args} color="green" />\n      <Checkbox {...args} color="blue" />\n      <Checkbox {...args} color="red" />\n      <Checkbox {...args} color="purple" />\n    </Fragment>,\n  argTypes: {\n    color: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}',...Colors.parameters?.docs?.source}}},Checked.parameters={...Checked.parameters,docs:{...Checked.parameters?.docs,source:{originalSource:'{\n  name: \'Checked\',\n  render: args => <Fragment>\n      <Checkbox {...args} color="gray" checked />\n      <Checkbox {...args} color="yellow" checked />\n      <Checkbox {...args} color="green" checked />\n      <Checkbox {...args} color="blue" checked />\n      <Checkbox {...args} color="red" checked />\n      <Checkbox {...args} color="purple" checked />\n    </Fragment>,\n  argTypes: {\n    color: {\n      table: {\n        disable: true\n      }\n    },\n    checked: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}',...Checked.parameters?.docs?.source}}},Indeterminate.parameters={...Indeterminate.parameters,docs:{...Indeterminate.parameters?.docs,source:{originalSource:'{\n  name: \'Indeterminate\',\n  render: args => <Fragment>\n      <Checkbox {...args} color="gray" indeterminate />\n      <Checkbox {...args} color="yellow" indeterminate />\n      <Checkbox {...args} color="green" indeterminate />\n      <Checkbox {...args} color="blue" indeterminate />\n      <Checkbox {...args} color="red" indeterminate />\n      <Checkbox {...args} color="purple" indeterminate />\n    </Fragment>,\n  argTypes: {\n    color: {\n      table: {\n        disable: true\n      }\n    },\n    checked: {\n      table: {\n        disable: true\n      }\n    },\n    indeterminate: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}',...Indeterminate.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  name: \'Disabled\',\n  render: args => <Fragment>\n      <Checkbox {...args} color="gray" disabled />\n      <Checkbox {...args} color="yellow" disabled />\n      <Checkbox {...args} color="green" disabled />\n      <Checkbox {...args} color="blue" disabled />\n      <Checkbox {...args} color="red" disabled />\n      <Checkbox {...args} color="purple" disabled />\n    </Fragment>,\n  argTypes: {\n    color: {\n      table: {\n        disable: true\n      }\n    },\n    disabled: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}',...Disabled.parameters?.docs?.source}}},CustomIcon.parameters={...CustomIcon.parameters,docs:{...CustomIcon.parameters?.docs,source:{originalSource:"{\n  name: 'Custom icon',\n  render: args => <Fragment>\n      <Checkbox {...args} icon={<OutlineStarIcon />} checked />\n      <Checkbox {...args} icon={<SolidStarIcon />} checked />\n    </Fragment>,\n  argTypes: {\n    checked: {\n      table: {\n        disable: true\n      }\n    },\n    icon: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}",...CustomIcon.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Sizes","Colors","Checked","Indeterminate","Disabled","CustomIcon"]}}]);